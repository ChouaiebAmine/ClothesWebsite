{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\my-app\\\\react-app\\\\src\\\\display_mode.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContainer = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  z-index: 9999;\n`;\n_c = ToggleContainer;\nconst Checkbox = styled.input`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n`;\n_c2 = Checkbox;\nconst Label = styled.label`\n  cursor: pointer;\n  width: 50px;\n  height: 27px;\n  background: ${({\n  theme\n}) => theme === 'light' ? 'grey' : 'black'};\n  display: block;\n  border-radius: 100px;\n  position: relative;\n  \n`;\n_c3 = Label;\nconst Slider = styled.span`\n  position: absolute;\n  top: 2px;\n  left: ${({\n  theme\n}) => theme === 'light' ? '2px' : 'calc(100% - 25px)'};\n  width: 23px;\n  height: 23px;\n  border-radius: 45px;\n  transition: left 0.4s;\n  background: #fff;\n  box-shadow: 0 2px 5px #000000b3;\n`;\n_c4 = Slider;\nconst DisplayMode = ({\n  theme,\n  toggleTheme\n}) => {\n  return /*#__PURE__*/_jsxDEV(ToggleContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: theme === 'light',\n      onChange: toggleTheme,\n      id: \"theme-switch\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"theme-switch\",\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c5 = DisplayMode;\nexport default DisplayMode;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ToggleContainer\");\n$RefreshReg$(_c2, \"Checkbox\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"Slider\");\n$RefreshReg$(_c5, \"DisplayMode\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","ToggleContainer","div","_c","Checkbox","input","_c2","Label","label","theme","_c3","Slider","span","_c4","DisplayMode","toggleTheme","children","checked","onChange","id","type","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c5","$RefreshReg$"],"sources":["C:/Users/USER/my-app/react-app/src/display_mode.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ToggleContainer = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 0;\r\n  width: 0;\r\n  visibility: hidden;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  cursor: pointer;\r\n  width: 50px;\r\n  height: 27px;\r\n  background: ${({ theme }) => (theme === 'light' ? 'grey' : 'black')};\r\n  display: block;\r\n  border-radius: 100px;\r\n  position: relative;\r\n  \r\n`;\r\n\r\nconst Slider = styled.span`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: ${({ theme }) => (theme === 'light' ? '2px' : 'calc(100% - 25px)')};\r\n  width: 23px;\r\n  height: 23px;\r\n  border-radius: 45px;\r\n  transition: left 0.4s;\r\n  background: #fff;\r\n  box-shadow: 0 2px 5px #000000b3;\r\n`;\r\n\r\n\r\nconst DisplayMode = ({ theme, toggleTheme }) => {\r\n  return (\r\n    <ToggleContainer>\r\n      <Checkbox\r\n        checked={theme === 'light'}\r\n        onChange={toggleTheme}\r\n        id=\"theme-switch\"\r\n        type=\"checkbox\"\r\n      />\r\n      <Label htmlFor=\"theme-switch\" theme={theme}>\r\n        <Slider theme={theme} />\r\n      </Label>\r\n    </ToggleContainer>\r\n  );\r\n};\r\n\r\nexport default DisplayMode;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,eAAe;AAOrB,MAAMG,QAAQ,GAAGN,MAAM,CAACO,KAAM;AAC9B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,QAAQ;AAMd,MAAMG,KAAK,GAAGT,MAAM,CAACU,KAAM;AAC3B;AACA;AACA;AACA,gBAAgB,CAAC;EAAEC;AAAM,CAAC,KAAMA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAS;AACtE;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIH,KAAK;AAWX,MAAMI,MAAM,GAAGb,MAAM,CAACc,IAAK;AAC3B;AACA;AACA,UAAU,CAAC;EAAEH;AAAM,CAAC,KAAMA,KAAK,KAAK,OAAO,GAAG,KAAK,GAAG,mBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,GAAA,GAVIF,MAAM;AAaZ,MAAMG,WAAW,GAAGA,CAAC;EAAEL,KAAK;EAAEM;AAAY,CAAC,KAAK;EAC9C,oBACEf,OAAA,CAACC,eAAe;IAAAe,QAAA,gBACdhB,OAAA,CAACI,QAAQ;MACPa,OAAO,EAAER,KAAK,KAAK,OAAQ;MAC3BS,QAAQ,EAAEH,WAAY;MACtBI,EAAE,EAAC,cAAc;MACjBC,IAAI,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFxB,OAAA,CAACO,KAAK;MAACkB,OAAO,EAAC,cAAc;MAAChB,KAAK,EAAEA,KAAM;MAAAO,QAAA,eACzChB,OAAA,CAACW,MAAM;QAACF,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEtB,CAAC;AAACE,GAAA,GAdIZ,WAAW;AAgBjB,eAAeA,WAAW;AAAC,IAAAX,EAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}